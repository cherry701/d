#include<stdio.h>
#include<stdlib.h>
int board[20], count;
/* Function to check conflicts
If no conflict for desired position returns 1
otherwise returns 0 */
int place(int row, int column)
{
int i;
for(i = 1 ; i <= row - 1 ; i++)
{
// Checking Column and Diagonal conflicts
if(board[i] == column)
return 0;
else
if( abs(board[i] - column) == abs(i - row) )
return 0;
}
return 1; // No conflicts
}
// Function for printing the solution
void print(int n)
{
int i, j;
printf("\n\nSolution %d : \n\n", ++count);
for(i = 1 ; i <= n ; i++)
printf("\t%d", i);
for(i = 1 ; i <= n ; i++)
{
printf("\n\n%d", i);
for(j = 1 ; j <= n ; j++) // For "n x n" board
{
if(board[i] == j)
printf("\tQ"); // Queen at "i, j" position
else
printf("\t-"); // Empty slot
}
}
}
// Function to check for proper positioning of queen
void queen(int row, int n)
{
int column;
for(column = 1 ; column <= n ; ++column)
{
if( place(row, column) )
{
board[row] = column; // No conflicts so place queen
if(row == n) // Dead end
print(n); // Printing the board configuration
else // Try queen with next position
queen(row + 1, n);
}
}
}
void main()
{
int n, i, j;
printf("\nEnter number of Queen's : ");
scanf("%d", &n);
queen(1, n);
}
